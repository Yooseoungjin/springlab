<!--<?xml version="1.0" encoding="UTF-8"?>-->
<!--<!DOCTYPE mapper-->
<!--        PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"-->
<!--        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">-->
<!--<mapper namespace="com.kbstar.mapper.MessageMapper">-->

<!--    &lt;!&ndash; 메세지 리스트 가져오기 &ndash;&gt;-->
<!--    <select id="message_list" parameterType="com.exam.model1.message.MessageTO" resultType="com.exam.model1.message.MessageTO">-->
<!--        select no, room, send_nick, recv_nick, date_format(send_time, '%Y-%m-%d %H:%i') send_time, read_time, content, read_chk-->
<!--        from message-->
<!--        where no in (select max(no) from message group by room) and (send_nick = #{nick} or recv_nick=#{nick})-->
<!--        order by no desc;-->
<!--    </select>-->

<!--    &lt;!&ndash; 메세지 list에서 상대방 profile 가져오기 &ndash;&gt;-->
<!--    <select id="get_other_profile" parameterType="com.exam.model1.message.MessageTO" resultType="String">-->
<!--        select profile from user-->
<!--        <choose>-->
<!--            <when test="send_nick == nick">-->
<!--                where nick = #{recv_nick}-->
<!--            </when>-->
<!--            <otherwise>-->
<!--                where nick = #{send_nick}-->
<!--            </otherwise>-->
<!--        </choose>-->
<!--    </select>-->

<!--    &lt;!&ndash; 안읽은 메세지 갯수 가져오기 &ndash;&gt;-->
<!--    <select id="count_unread" parameterType="com.exam.model1.message.MessageTO" resultType="Int">-->
<!--        select count(no) from message-->
<!--        where recv_nick=#{nick} and read_chk=0 and room=#{room}-->
<!--    </select>-->

<!--    &lt;!&ndash; 메세지 내용 가져오기 &ndash;&gt;-->
<!--    <select id="room_content_list" parameterType="com.exam.model1.message.MessageTO" resultType="com.exam.model1.message.MessageTO">-->
<!--        select m.no, m.room, m.send_nick, m.recv_nick, date_format(m.send_time, '%Y-%m-%d %H:%i') send_time, m.read_time, m.content, m.read_chk, u.profile-->
<!--        from message m left outer join user u-->
<!--        on m.send_nick = u.nick-->
<!--        <choose>-->
<!--            <when test="room != 0">-->
<!--                where room=#{room}-->
<!--            </when>-->
<!--            <otherwise>-->
<!--                where (recv_nick = #{recv_nick} and send_nick = #{nick}) or (send_nick = #{recv_nick} and recv_nick = #{nick})-->
<!--            </otherwise>-->
<!--        </choose>-->

<!--    </select>-->

<!--    &lt;!&ndash; 메세지 읽음 처리 &ndash;&gt;-->
<!--    <update id="message_read_chk" parameterType="com.exam.model1.message.MessageTO">-->
<!--        update message set read_chk=1-->
<!--        <choose>-->
<!--            <when test="room != 0">-->
<!--                where room=#{room} and read_chk=0 and recv_nick=#{nick}-->
<!--            </when>-->
<!--            <otherwise>-->
<!--                where send_nick=#{recv_nick} and read_chk=0 and recv_nick=#{nick}-->
<!--            </otherwise>-->
<!--        </choose>-->

<!--    </update>-->

<!--    &lt;!&ndash; 메세지리스트에서 메세지 보내기 &ndash;&gt;-->
<!--    <insert id="messageSendInlist" parameterType="com.exam.model1.message.MessageTO">-->
<!--        <choose>-->
<!--            <when test="room != 0">-->
<!--                insert into message values(0, #{room}, #{send_nick}, #{recv_nick}, now(), now(), #{content}, 0);-->
<!--            </when>-->
<!--            <otherwise>-->
<!--                insert into message values(0, #{room}, #{send_nick}, #{recv_nick}, now(), now(), #{content}, 0);-->
<!--            </otherwise>-->
<!--        </choose>-->
<!--    </insert>-->

<!--    &lt;!&ndash; room 번호 최댓값 구하기 &ndash;&gt;-->
<!--    <select id="max_room"  parameterType="com.exam.model1.message.MessageTO" resultType="Int">-->
<!--        select max(room) from message-->
<!--    </select>-->

<!--    &lt;!&ndash; 메세지 이력이 있는지 검색 &ndash;&gt;-->
<!--    <select id="exist_chat" parameterType="com.exam.model1.message.MessageTO" resultType="Int">-->
<!--        select count(no) from message-->
<!--        where (recv_nick = #{recv_nick} and send_nick=#{send_nick}) or (send_nick = #{recv_nick} and recv_nick=#{send_nick})-->
<!--    </select>-->

<!--    &lt;!&ndash; 기존 메세지 내역의 room 번호를 가져옴 &ndash;&gt;-->
<!--    <select id="select_room"  parameterType="com.exam.model1.message.MessageTO" resultType="String">-->
<!--        select room from message-->
<!--        where (recv_nick = #{recv_nick} and send_nick=#{send_nick}) or (send_nick = #{recv_nick} and recv_nick=#{send_nick})-->
<!--            limit 0,1-->
<!--    </select>-->

<!--</mapper>-->

